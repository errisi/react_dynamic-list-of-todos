{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortType","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","setFilteredTodos","useState","sortType","setSortType","query","setQuery","useEffect","filteredTodos","Active","filter","Completed","toLowerCase","includes","trim","todoFilter","onChange","e","target","value","placeholder","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","isLoading","setIsLoading","userId","userFromServer","href","email","name","App","setTodos","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9502b11f.chunk.js","sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setFilteredTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n};\n\nenum SortType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nconst todoFilter = (\n  todos: Todo[],\n  sortType: string,\n  query: string,\n): Todo[] => {\n  let filteredTodos = [...todos];\n\n  switch (sortType) {\n    case SortType.Active:\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n      break;\n\n    case SortType.Completed:\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(todo => (\n      todo.title.toLowerCase().includes(query.trim().toLowerCase())\n    ));\n  }\n\n  return filteredTodos;\n};\n\nexport const TodoFilter: FC<Props> = ({\n  todos,\n  setFilteredTodos,\n}) => {\n  const [sortType, setSortType] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const filteredTodos = todoFilter(todos, sortType, query);\n\n    setFilteredTodos(filteredTodos);\n  }, [sortType, query, todos, setFilteredTodos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={e => setSortType(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\">\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (value: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={cn({\n            'has-background-info-light': todo.id === selectedTodo?.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={cn(\n                  'far',\n                  { 'fa-eye-slash': todo.id === selectedTodo?.id },\n                  { 'fa-eye': todo.id !== selectedTodo?.id },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  setSelectedTodo: (value: React.SetStateAction<Todo | null>) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(userFromServer => {\n          setUser(userFromServer);\n          setIsLoading(false);\n        });\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={cn(\n                  { 'has-text-success': todo.completed },\n                  { 'has-text-danger': !todo.completed },\n                )}\n              >\n                {todo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {user && ' by '}\n\n              {user && (\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setFilteredTodos(todosFromServer);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setFilteredTodos={setFilteredTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {!isLoading && (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}